###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       04/Oct/2024  18:23:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\user\Desktop\test1\user\main.c
#    Command line =  
#        -f C:\Users\user\AppData\Local\Temp\EW4E54.tmp
#        (C:\Users\user\Desktop\test1\user\main.c -D USE_STDPERIPH_DRIVER -D
#        STM32F10X_CL -lC C:\Users\user\Desktop\test1\Debug\List -o
#        C:\Users\user\Desktop\test1\Debug\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\user\Desktop\test1\libraries\CMSIS\DeviceSupport\ -I
#        C:\Users\user\Desktop\test1\libraries\CMSIS\DeviceSupport\Startup\ -I
#        C:\Users\user\Desktop\test1\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\user\Desktop\test1\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\user\Desktop\test1\user\ -I
#        C:\Users\user\Desktop\test1\user\inc\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  C:\Users\user\Desktop\test1\Debug\List\main.lst
#    Object file  =  C:\Users\user\Desktop\test1\Debug\Obj\main.o
#
###############################################################################

C:\Users\user\Desktop\test1\user\main.c
      1          #include "stm32f10x.h"
      2          
      3          // RCC @@ @@
      4          // Reset and Clock Control
      5          #define RCC_APB2ENR (*(volatile unsigned int *)0x40021018)
      6          
      7          // Configuration register
      8          // @@@ Port : PA3, PA4, PB10, PC4, PC13
      9          // Port_A HIGH & LOW (PA3, PA4) : Port_A@ @@ @@@ offset @@@
     10          #define GPIOA_CRL (*(volatile unsigned int *)0x40010800)
     11          #define GPIOA_CRH (*(volatile unsigned int *)0x40010804)
     12          //Port_B HIGH (PA10) : Port_B@ @@ @@@ offset @@@
     13          #define GPIOB_CRH (*(volatile unsigned int *)0x40010C04)
     14          // Port_C HIGH & LOW (PC4, PC13) : Port_C@ @@ @@@ offset @@@
     15          #define GPIOC_CRL (*(volatile unsigned int *)0x40011000)
     16          #define GPIOC_CRH (*(volatile unsigned int *)0x40011004)
     17          
     18          //IDR(Port input data register)
     19          //Port@ @@ @@@ + IDR offset(0x08)
     20          #define GPIOA_IDR (*(volatile unsigned int *) 0x40010808) // key@ B,C@ ->@@@@@@
     21          #define GPIOC_IDR (*(volatile unsigned int *)0x40011008)
     22          #define GPIOB_IDR (*(volatile unsigned int *)0x40010C08)
     23          
     24          
     25          // set-reset @@@ @@ brr, bsrr
     26          // Port_A@ @@ @@@ brr, bsrr offset@ @@ @@@.
     27          #define GPIOA_BRR (*(volatile unsigned int *)0x40010814)
     28          #define GPIOA_BSRR (*(volatile unsigned int *)0x40010810)
     29          #define GPIOC_BRR (*(volatile unsigned int *) 0x4001114)
     30          
     31          //PortD@ @@@@ @@
     32          #define GPIOD_CRL (*(volatile unsigned int *)0x40011400)
     33          #define GPIOD_BSRR (*(volatile unsigned int *)0x40011410)
     34          #define GPIOD_BRR (*(volatile unsigned int *)0x40011414)
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void delay() {
     37            int i;
     38            for (i=0; i<10000000; i++) {}
   \                     delay: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE000             B.N      ??delay_0
   \                     ??delay_1: (+1)
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \                     ??delay_0: (+1)
   \   00000006   0x....             LDR.N    R1,??DataTable1  ;; 0x989680
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xDBFB             BLT.N    ??delay_1
     39          }
   \   0000000C   0x4770             BX       LR               ;; return
     40          
     41          

   \                                 In section .text, align 2, keep-with-next
     42          int main(void)
     43          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     44            // clock enable : PORT A, B, C, D ON
     45            RCC_APB2ENR |= 0x3C;
   \   00000002   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40021018
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x003C      ORRS     R0,R0,#0x3C
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40021018
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     46          
     47            // @@@@ @@@ = Key 1 PC4
     48            GPIOC_CRL &= 0xFFF0FFFF; // PC4@ @@
   \   0000000E   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40011000
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000016   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40011000
   \   00000018   0x6008             STR      R0,[R1, #+0]
     49            GPIOC_CRL |= 0x00080000; // mode : input (10 00)
   \   0000001A   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40011000
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000022   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40011000
   \   00000024   0x6008             STR      R0,[R1, #+0]
     50          
     51            // Key 2 PB10
     52            GPIOB_CRH &= 0xFFFFF0FF; // PB10@ @@
   \   00000026   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40010c04
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF430 0x6070      BICS     R0,R0,#0xF00
   \   0000002E   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40010c04
   \   00000030   0x6008             STR      R0,[R1, #+0]
     53            GPIOB_CRH |= 0x00000800; // mode : input (10 00)
   \   00000032   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40010c04
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000003A   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40010c04
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     54          
     55            // Key 3 PC13
     56            GPIOC_CRH &= 0xFF0FFFFF; // PC13@ @@
   \   0000003E   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40011004
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF430 0x0070      BICS     R0,R0,#0xF00000
   \   00000046   0x....             LDR.N    R1,??DataTable1_4  ;; 0x40011004
   \   00000048   0x6008             STR      R0,[R1, #+0]
     57            GPIOC_CRH |= 0x00800000; // mode : input (10 00)
   \   0000004A   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40011004
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000052   0x....             LDR.N    R1,??DataTable1_4  ;; 0x40011004
   \   00000054   0x6008             STR      R0,[R1, #+0]
     58          
     59            //PA3, PA4 -> @@@ @@ @@@ @@ @@
     60            //GPIOA_CRH &= 0xFF0FF0FF; //PA10, PA13@ @@
     61            //GPIOA_CRH |= 0x00100100; // @@@ @@@@@ outmode?
     62            
     63            GPIOA_CRH &= 0x00000000; //PA10, PA13@ @@
   \   00000056   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40010804
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40010804
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     64            GPIOA_CRH |= 0x11111111; // @@@ @@@@@ outmode?
   \   00000060   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40010804
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF070 0x30EE      ORNS     R0,R0,#-286331154
   \   00000068   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40010804
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     65            
     66          
     67            //@@ @@@ @@@@ @@@@@.
     68            //GPIOA_BRR &= 0x00000000;
     69            //GPIOA_BSRR |= (0x8 | 0x10);
     70            
     71            GPIOD_CRL &= 0x0FF000FF;
   \   0000006C   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011400
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0x....             LDR.N    R0,??DataTable1_7  ;; 0xff000ff
   \   00000072   0x4001             ANDS     R1,R0,R1
   \   00000074   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011400
   \   00000076   0x6001             STR      R1,[R0, #+0]
     72            GPIOD_CRL |= 0x30033300;
   \   00000078   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011400
   \   0000007A   0x6801             LDR      R1,[R0, #+0]
   \   0000007C   0x....             LDR.N    R0,??DataTable1_8  ;; 0x30033300
   \   0000007E   0x4301             ORRS     R1,R0,R1
   \   00000080   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011400
   \   00000082   0x6001             STR      R1,[R0, #+0]
     73            GPIOD_BSRR |= 0x9C; // PD2, PD3, PD4, PD7 OF
   \   00000084   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF050 0x009C      ORRS     R0,R0,#0x9C
   \   0000008C   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   0000008E   0x6008             STR      R0,[R1, #+0]
     74            
     75            GPIOA_BSRR |= (0x2000 | 0x400);
   \   00000090   0x....             LDR.N    R0,??DataTable1_10  ;; 0x40010810
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF450 0x5010      ORRS     R0,R0,#0x2400
   \   00000098   0x....             LDR.N    R1,??DataTable1_10  ;; 0x40010810
   \   0000009A   0x6008             STR      R0,[R1, #+0]
     76            GPIOD_BSRR |= 0xFF;
   \   0000009C   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   000000A4   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   000000A6   0x6008             STR      R0,[R1, #+0]
     77            GPIOA_BRR &= 0x00000000;
   \   000000A8   0x....             LDR.N    R0,??DataTable1_11  ;; 0x40010814
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x....             LDR.N    R1,??DataTable1_11  ;; 0x40010814
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   \   000000B2   0xE019             B.N      ??main_0
     78              // 4. input data register
     79          
     80          
     81          
     82            while(1){
     83              if(~(GPIOC_IDR) & (0x1 << 4)) { //Key1(pc4)
     84              
     85              //GPIOD_BRR |= 0x84; // PD2, PD7 ON LED1, LED4
     86                
     87              GPIOD_BRR |= 0x8;
   \                     ??main_1: (+1)
   \   000000B4   0x....             LDR.N    R0,??DataTable1_12  ;; 0x40011414
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000BC   0x....             LDR.N    R1,??DataTable1_12  ;; 0x40011414
   \   000000BE   0x6008             STR      R0,[R1, #+0]
     88              GPIOD_BRR |= 0x10;
   \   000000C0   0x....             LDR.N    R0,??DataTable1_12  ;; 0x40011414
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000C8   0x....             LDR.N    R1,??DataTable1_12  ;; 0x40011414
   \   000000CA   0x6008             STR      R0,[R1, #+0]
     89          
     90              delay();
   \   000000CC   0x.... 0x....      BL       delay
     91              
     92              //GPIOD_BSRR |= 0x84; // PD2, PD7 OFF LED1, LED4
     93          
     94              GPIOD_BSRR |= 0x8;
   \   000000D0   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000D8   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   000000DA   0x6008             STR      R0,[R1, #+0]
     95              GPIOD_BSRR |= 0x10;
   \   000000DC   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000E4   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   000000E6   0x6008             STR      R0,[R1, #+0]
     96            }
   \                     ??main_0: (+1)
   \   000000E8   0x....             LDR.N    R0,??DataTable1_13  ;; 0x40011008
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x43C0             MVNS     R0,R0
   \   000000EE   0x06C0             LSLS     R0,R0,#+27
   \   000000F0   0xD4E0             BMI.N    ??main_1
     97            else if(~(GPIOB_IDR) & (0x1 << 10)){ // Key2(PB10)
   \   000000F2   0x....             LDR.N    R0,??DataTable1_14  ;; 0x40010c08
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x43C0             MVNS     R0,R0
   \   000000F8   0x0540             LSLS     R0,R0,#+21
   \   000000FA   0xD50E             BPL.N    ??main_2
     98              GPIOD_BRR |= 0x8;
   \   000000FC   0x....             LDR.N    R0,??DataTable1_12  ;; 0x40011414
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000104   0x....             LDR.N    R1,??DataTable1_12  ;; 0x40011414
   \   00000106   0x6008             STR      R0,[R1, #+0]
     99          
    100              delay();
   \   00000108   0x.... 0x....      BL       delay
    101          
    102              GPIOD_BSRR |= 0x8;
   \   0000010C   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000114   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   00000116   0x6008             STR      R0,[R1, #+0]
   \   00000118   0xE7E6             B.N      ??main_0
    103          
    104            }
    105            else if(~(GPIOC_IDR) & (0x1 << 13)){ //Key3(PC13)
   \                     ??main_2: (+1)
   \   0000011A   0x....             LDR.N    R0,??DataTable1_13  ;; 0x40011008
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x43C0             MVNS     R0,R0
   \   00000120   0x0480             LSLS     R0,R0,#+18
   \   00000122   0xD5E1             BPL.N    ??main_0
    106              GPIOD_BRR |= 0x10;
   \   00000124   0x....             LDR.N    R0,??DataTable1_12  ;; 0x40011414
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000012C   0x....             LDR.N    R1,??DataTable1_12  ;; 0x40011414
   \   0000012E   0x6008             STR      R0,[R1, #+0]
    107          
    108              delay();
   \   00000130   0x.... 0x....      BL       delay
    109          
    110              GPIOD_BSRR |= 0x10;
   \   00000134   0x....             LDR.N    R0,??DataTable1_9  ;; 0x40011410
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000013C   0x....             LDR.N    R1,??DataTable1_9  ;; 0x40011410
   \   0000013E   0x6008             STR      R0,[R1, #+0]
   \   00000140   0xE7D2             B.N      ??main_0
    111            }
    112          
    113            
    114            }
    115            return 0;
                   ^
Warning[Pe111]: statement is unreachable
    116          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40010C04         DC32     0x40010c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40011004         DC32     0x40011004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40010804         DC32     0x40010804

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40011400         DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x0FF000FF         DC32     0xff000ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x30033300         DC32     0x30033300

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x40011410         DC32     0x40011410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x40010810         DC32     0x40010810

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x40010814         DC32     0x40010814

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x40011414         DC32     0x40011414

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x40011008         DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x40010C08         DC32     0x40010c08
    117          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   delay
       8   main
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      14  delay
     322  main

 
 396 bytes in section .text
 
 396 bytes of CODE memory

Errors: none
Warnings: 1
