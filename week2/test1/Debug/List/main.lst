###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       25/Sep/2024  22:17:05
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\user\Desktop\test1\user\main.c
#    Command line =  
#        -f C:\Users\user\AppData\Local\Temp\EW20F9.tmp
#        (C:\Users\user\Desktop\test1\user\main.c -D USE_STDPERIPH_DRIVER -D
#        STM32F10X_CL -lC C:\Users\user\Desktop\test1\Debug\List -o
#        C:\Users\user\Desktop\test1\Debug\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\user\Desktop\test1\libraries\CMSIS\DeviceSupport\ -I
#        C:\Users\user\Desktop\test1\libraries\CMSIS\DeviceSupport\Startup\ -I
#        C:\Users\user\Desktop\test1\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\user\Desktop\test1\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\user\Desktop\test1\user\ -I
#        C:\Users\user\Desktop\test1\user\inc\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  C:\Users\user\Desktop\test1\Debug\List\main.lst
#    Object file  =  C:\Users\user\Desktop\test1\Debug\Obj\main.o
#
###############################################################################

C:\Users\user\Desktop\test1\user\main.c
      1          #include "stm32f10x.h"
      2          
      3          #define RCC_APB2ENR (*(volatile unsigned int *)0x40021018)
      4          
      5          #define GPIOA_CRL (*(volatile unsigned int *)0x40010800)
      6          #define GPIOA_IDR (*(volatile unsigned int *) 0x40010808)
      7          
      8          #define GPIOB_CRH (*(volatile unsigned int *)0x40010C04)
      9          #define GPIOB_IDR (*(volatile unsigned int *)0x40010C08)
     10          
     11          #define GPIOC_CRL (*(volatile unsigned int *)0x40011000)
     12          #define GPIOC_CRH (*(volatile unsigned int *)0x40011004)
     13          #define GPIOC_IDR (*(volatile unsigned int *)0x40011008)
     14          
     15          #define GPIOD_CRL (*(volatile unsigned int *)0x40011400)
     16          #define GPIOD_BSRR (*(volatile unsigned int *)0x40011410)
     17          #define GPIOD_BRR (*(volatile unsigned int *)0x40011414)
     18          

   \                                 In section .text, align 4, keep-with-next
     19          int main(void)
     20          {
     21          
     22          // Key 1 PC4
     23            GPIOC_CRL &= 0xFFF0FFFF;
   \                     main: (+1)
   \   00000000   0x4839             LDR.N    R0,??main_0      ;; 0x40011000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   00000008   0x4937             LDR.N    R1,??main_0      ;; 0x40011000
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     24          GPIOC_CRL |= 0x00080000;
   \   0000000C   0x4836             LDR.N    R0,??main_0      ;; 0x40011000
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000014   0x4934             LDR.N    R1,??main_0      ;; 0x40011000
   \   00000016   0x6008             STR      R0,[R1, #+0]
     25          // Key 2 PB10
     26          GPIOB_CRH &= 0xFFFFF0FF;
   \   00000018   0x4834             LDR.N    R0,??main_0+0x4  ;; 0x40010c04
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF430 0x6070      BICS     R0,R0,#0xF00
   \   00000020   0x4932             LDR.N    R1,??main_0+0x4  ;; 0x40010c04
   \   00000022   0x6008             STR      R0,[R1, #+0]
     27          GPIOB_CRH |= 0x00000800;
   \   00000024   0x4831             LDR.N    R0,??main_0+0x4  ;; 0x40010c04
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000002C   0x492F             LDR.N    R1,??main_0+0x4  ;; 0x40010c04
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     28          // Key 3 PC13
     29          GPIOC_CRH &= 0xFF0FFFFF;
   \   00000030   0x482F             LDR.N    R0,??main_0+0x8  ;; 0x40011004
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF430 0x0070      BICS     R0,R0,#0xF00000
   \   00000038   0x492D             LDR.N    R1,??main_0+0x8  ;; 0x40011004
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     30          GPIOC_CRH |= 0x00800000;
   \   0000003C   0x482C             LDR.N    R0,??main_0+0x8  ;; 0x40011004
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000044   0x492A             LDR.N    R1,??main_0+0x8  ;; 0x40011004
   \   00000046   0x6008             STR      R0,[R1, #+0]
     31          // Key 4 PA0
     32          GPIOA_CRL &= 0xFFFFFFF0;
   \   00000048   0x482A             LDR.N    R0,??main_0+0xC  ;; 0x40010800
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x0900             LSRS     R0,R0,#+4
   \   0000004E   0x0100             LSLS     R0,R0,#+4
   \   00000050   0x4928             LDR.N    R1,??main_0+0xC  ;; 0x40010800
   \   00000052   0x6008             STR      R0,[R1, #+0]
     33          GPIOA_CRL |= 0x00000008;
   \   00000054   0x4827             LDR.N    R0,??main_0+0xC  ;; 0x40010800
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000005C   0x4925             LDR.N    R1,??main_0+0xC  ;; 0x40010800
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     34          
     35          // clock
     36          // PORT A, B, C, D ON
     37          RCC_APB2ENR |= 0x3C;
   \   00000060   0x4825             LDR.N    R0,??main_0+0x10  ;; 0x40021018
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF050 0x003C      ORRS     R0,R0,#0x3C
   \   00000068   0x4923             LDR.N    R1,??main_0+0x10  ;; 0x40021018
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     38          
     39          // LED
     40          // PD2, PD3, PD4, PD7
     41          GPIOD_CRL &= 0x0FF000FF;
   \   0000006C   0x4823             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0x4823             LDR.N    R0,??main_0+0x18  ;; 0xff000ff
   \   00000072   0x4001             ANDS     R1,R0,R1
   \   00000074   0x4821             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   00000076   0x6001             STR      R1,[R0, #+0]
     42          GPIOD_CRL |= 0x30033300;
   \   00000078   0x4820             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   0000007A   0x6801             LDR      R1,[R0, #+0]
   \   0000007C   0x4821             LDR.N    R0,??main_0+0x1C  ;; 0x30033300
   \   0000007E   0x4301             ORRS     R1,R0,R1
   \   00000080   0x481E             LDR.N    R0,??main_0+0x14  ;; 0x40011400
   \   00000082   0x6001             STR      R1,[R0, #+0]
     43          GPIOD_BSRR |= 0x9C; // PD2, PD3, PD4, PD7 OFF
   \   00000084   0x4820             LDR.N    R0,??main_0+0x20  ;; 0x40011410
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF050 0x009C      ORRS     R0,R0,#0x9C
   \   0000008C   0x491E             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   \   00000090   0xE005             B.N      ??main_1
     44          
     45          while(1){
     46          if((GPIOC_IDR & 0x10) == 0){ //Key1
     47          GPIOD_BRR |= 0x84; // PD2, PD7 ON LED1, LED4
   \                     ??main_2: (+1)
   \   00000092   0x481E             LDR.N    R0,??main_0+0x24  ;; 0x40011414
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0xF050 0x0084      ORRS     R0,R0,#0x84
   \   0000009A   0x491C             LDR.N    R1,??main_0+0x24  ;; 0x40011414
   \   0000009C   0x6008             STR      R0,[R1, #+0]
     48          }
   \                     ??main_1: (+1)
   \   0000009E   0x481C             LDR.N    R0,??main_0+0x28  ;; 0x40011008
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x06C0             LSLS     R0,R0,#+27
   \   000000A4   0xD5F5             BPL.N    ??main_2
     49          else if((GPIOB_IDR & 0x0400) == 0){ // Key2
   \   000000A6   0x481B             LDR.N    R0,??main_0+0x2C  ;; 0x40010c08
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x0540             LSLS     R0,R0,#+21
   \   000000AC   0xD406             BMI.N    ??main_3
     50          GPIOD_BSRR |= 0x84; // PD2, PD7 OFF LED1, LED4
   \   000000AE   0x4816             LDR.N    R0,??main_0+0x20  ;; 0x40011410
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0xF050 0x0084      ORRS     R0,R0,#0x84
   \   000000B6   0x4914             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   000000B8   0x6008             STR      R0,[R1, #+0]
   \   000000BA   0xE7F0             B.N      ??main_1
     51          }
     52          else if((GPIOC_IDR & 0x2000) == 0){ //key 3
   \                     ??main_3: (+1)
   \   000000BC   0x4814             LDR.N    R0,??main_0+0x28  ;; 0x40011008
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x0480             LSLS     R0,R0,#+18
   \   000000C2   0xD406             BMI.N    ??main_4
     53          GPIOD_BRR |= 0x18; // PD3, PD4 ON LED2, LED3
   \   000000C4   0x4811             LDR.N    R0,??main_0+0x24  ;; 0x40011414
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF050 0x0018      ORRS     R0,R0,#0x18
   \   000000CC   0x490F             LDR.N    R1,??main_0+0x24  ;; 0x40011414
   \   000000CE   0x6008             STR      R0,[R1, #+0]
   \   000000D0   0xE7E5             B.N      ??main_1
     54          }
     55          else if((GPIOA_IDR & 0x01) == 0){ //key 4
   \                     ??main_4: (+1)
   \   000000D2   0x4811             LDR.N    R0,??main_0+0x30  ;; 0x40010808
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x07C0             LSLS     R0,R0,#+31
   \   000000D8   0xD4E1             BMI.N    ??main_1
     56          GPIOD_BSRR |= 0x18; // PD3, PD4 OFF LED2, LED3
   \   000000DA   0x480B             LDR.N    R0,??main_0+0x20  ;; 0x40011410
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xF050 0x0018      ORRS     R0,R0,#0x18
   \   000000E2   0x4909             LDR.N    R1,??main_0+0x20  ;; 0x40011410
   \   000000E4   0x6008             STR      R0,[R1, #+0]
   \   000000E6   0xE7DA             B.N      ??main_1
   \                     ??main_0:
   \   000000E8   0x40011000         DC32     0x40011000
   \   000000EC   0x40010C04         DC32     0x40010c04
   \   000000F0   0x40011004         DC32     0x40011004
   \   000000F4   0x40010800         DC32     0x40010800
   \   000000F8   0x40021018         DC32     0x40021018
   \   000000FC   0x40011400         DC32     0x40011400
   \   00000100   0x0FF000FF         DC32     0xff000ff
   \   00000104   0x30033300         DC32     0x30033300
   \   00000108   0x40011410         DC32     0x40011410
   \   0000010C   0x40011414         DC32     0x40011414
   \   00000110   0x40011008         DC32     0x40011008
   \   00000114   0x40010C08         DC32     0x40010c08
   \   00000118   0x40010808         DC32     0x40010808
     57          }
     58          }
     59          return 0;
                 ^
Warning[Pe111]: statement is unreachable
     60          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   main


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     284  main

 
 284 bytes in section .text
 
 284 bytes of CODE memory

Errors: none
Warnings: 1
